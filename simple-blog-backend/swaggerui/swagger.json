swagger: "2.0"
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
host: localhost:8000
basePath: /api
schemes:
  - http
paths:
  /test:
    get:
      summary: Returns test struct with two fields.
      description: Optional extended description in Markdown.
      produces:
        - application/json
      responses:
        200:
          description: OK

  /rec:
    post:
      summary: Prints json file to go server console.
      parameters:
        - in: body
          name: blogTest
          description: The user to create.
          schema:
            type: object
            required:
              - title
            properties:
              title:
                type: string
              content:
                type: string
          example: '{"title":"foo", "content":"bar"}'
      produces:
        - void
      responses:
        200:
          description: OK
  /addBlog:
    post:
      summary: IMPORTANT -> THIS IS NOT YET IMPLEMENTED - Creates a new blog entry.
      parameters:
        - in: body
          name: blogTest
          description: The user to create.
          schema:
            type: object
            required:
              - title
            properties:
              title:
                type: string
              content:
                type: string
          example: '{"title":"foo", "content":"bar"}'
      produces:
        - void
      responses:
        200:
          description: OK
  /mdtohtml:
    post:
      summary: Transforms Markdown to a html format.
      parameters:
        - in: body
          name: Markdown to HTML
          description: This Endpoint transforms a Markdown to a HTML format. In the example we create a h1 tag with an li tag. # -> h1, - -> li
          schema:
            type: object
            required:
              - content
            properties:
              title:
                type: string
              content:
                type: string
          example: '{"title": "I AM A PAGE TITLE", 
          "content": "# I am a headline and so on and  \n - I am a bullet point"}'
      produces:
        - void
      responses:
        200:
          description: OK
  /savemd:
    post:
      summary: Saves given Mardown content to local filesystem.
      parameters:
        - in: body
          name: Markdown to save to local file
          description: This Endpoint saves the Mardown file given in the POST body to the local filesysten. The title of the file + current date will be the filename
          schema:
            type: object
            required:
              - title
              - content
            properties:
              title:
                type: string
              content:
                type: string
          example: '{"title": "I AM A PAGE TITLE", 
          "content": "# I am a headline and so on and  \n - I am a bullet point"}'
      produces:
        - A saved file in the local filesystem
      responses:
        200:
          description: OK
  /uploadmd/{fileName}:
    get:
      summary: Returns the given file/filename as a html response
      parameters:
        - in: path
          name: fileName
          description: This Endpoint takes a local file with the given filename and returns a html version
          schema:
            type: object
            required:
              - fileName
            properties:
              fileName:
                type: string
      produces:
        - A HTML version of the given file
      responses:
        200:
          description: OK